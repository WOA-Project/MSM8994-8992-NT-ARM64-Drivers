;/*++
;
;   Copyright (c) 2008-2014 QUALCOMM Technologies Incorporated.
;               All Rights Reserved.
;               Qualcomm Confidential and Proprietary
;
;Module Name:
;    qcqdss8994.inf
;
;Abstract:
;    INF file for installing the QDSS Driver
;--*/

[Version]
Signature   = "$WINDOWS NT$"
Class       = System
ClassGuid   = {4d36e97d-e325-11ce-bfc1-08002be10318}
Provider    = %QUALCOMM%
DriverVer   = 07/02/2015,1.0.1067.0000
CatalogFile = qcqdss8994.cat
PnpLockDown = 1

[SourceDisksNames]
1 = %DiskId1%

[SourceDisksFiles]
qcqdss8994.sys = 1

[DestinationDirs]
DefaultDestDir = 12

[ControlFlags]
ExcludeFromSelect = *

;*****************************************
; QDSS Install Section
;*****************************************
[Manufacturer]
%QUALCOMM% = Standard,NTarm64

[Standard.NTarm64]
%QDSS.DeviceDesc% = QDSS_Device, ACPI\QCOM247D

[QDSS_Device.NT]
CopyFiles   = Drivers_Dir
AddProperty = WDTFSOCDeviceCategory
Reboot

[Drivers_Dir]
qcqdss8994.sys

[WDTFSOCDeviceCategory]
{5D078032-6378-437B-8DA5-9B32B7CA3FDD}, 2, 7, , 2

;-------------- Service installation
[QDSS_Device.NT.Services]
AddService = qcQDSS,%SPSVCINST_ASSOCSERVICE%, QDSS_Service_Inst

;-------------- HW installation
[QDSS_Device.NT.HW]
addreg = QDSSSD

[QDSSSD]
HKR, , Security, , "D:P(A;;GA;;;BA)(A;;GA;;;SY)"

; -------------- QDSS driver install sections
[QDSS_Service_Inst]
DisplayName    = %QDSS.SVCDESC%
ServiceType    = %SERVICE_KERNEL_DRIVER%
StartType      = %SERVICE_BOOT_START%
ErrorControl   = %SERVICE_ERROR_NORMAL%
LoadOrderGroup = Base
Tag            = 17
ServiceBinary  = %12%\qcqdss8994.sys
addreg         = QDSSCONFIG

[QDSSCONFIG]
; set default clock speed to SVS - speed depends on Voltage (150MHz - 300 MHz)
HKR, Parameters                           , ClockSpeed             , 0x00010001,  0x1
HKR, Parameters                           , TraceOn                , 0x00010001, 0
HKR, Parameters                           , ETMOn                  , 0x00010001, 0
;turn on STM by default (will not get effected unless TraceOn is ON)
HKR, Parameters                           , STMOn                  , 0x00010001, 1
;file sink (0) - ETB is the default trace sink
HKR, Parameters                           , TraceSinkType          , 0x00010001, 0x0
;by default DDR is 1 MByte
HKR, Parameters                           , ETRBufferSize          , 0x00010001, 0x100000
;by default file sink is 10 MBytes
HKR, Parameters                           , ETRFileSinkSize        , 0x00010001, 0xA00000
; default file sink full path
HKR, Parameters                           , ETRFilePath            , 0x00000000, "\DosDevices\C:\data\users\public\documents\QdssTrace.bin"
;TPIU-SD is the popular TPIU variant and it expects "continuous" TPIU Mode
; hence setting default TPIU Mode to "continuous"
HKR, Parameters                           , TPIUMode               , 0x00010001,  0x3
HKR, Parameters                           , STMHwEventsOn          , 0x00010001, 0x0
HKR, Parameters                           , STMSwEventsOn          , 0x00010001, 0x0
HKR, Parameters                           , BusTraceOn             , 0x00010001, 0x0
;by default ETW activated trace is OFF
HKR, Parameters                           , ETWTraceControl        , 0x00010001, 0x0
;by default ETW provider is PEP (POP_PEP_ETW_PROVIDER)
HKR, Parameters                           , ETWProviderGUID        , 0x00000000, "{5412704e-b2e1-4624-8ffd-55777b8f7373}"
; ---------------------- NHLOS Trace Control -------------------
; uses - 1 + 128 + 24 + 8 + 4 + 1 = 166 bytes of registry memory
; Global Flag Controlling NHLOS Tracing
HKR, Parameters                           , NHLOSSubSysTraceControl, 0x00010001,  0x00000000


; We assume there are at most 4 subsystems which provides swevt trace,
; the names are hardcoded as ADSP, PRM, MPSS, WCNSS. We also limit the
; maximum number of images per subsystem as 4. Such assumptions are
; hardcorded here as well as in qdssdevice.h. This INX file set all
; bitmask as 0x0 and CRC as "". It is expected that user should run
; registry update script (generated from profile based configuration tool)
; to update those registries. Once updated and then with a reboot, driver
; understands how many subsystems there are, each subsystem has how many
; images, what is each image's CRC, bitmask and bitmask's bit length.

; Adsp

HKR, Parameters\Swevt\Adsp\Image_1        , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Adsp\Image_1        , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Adsp\Image_2        , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Adsp\Image_2        , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Adsp\Image_3        , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Adsp\Image_3        , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Adsp\Image_4        , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Adsp\Image_4        , Crc                    , 0x00000000,

; Mpss

HKR, Parameters\Swevt\Mpss\Image_1        , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Mpss\Image_1        , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Mpss\Image_2        , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Mpss\Image_2        , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Mpss\Image_3        , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Mpss\Image_3        , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Mpss\Image_4        , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Mpss\Image_4        , Crc                    , 0x00000000,

; Wcnss

HKR, Parameters\Swevt\Wcnss\Image_1       , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Wcnss\Image_1       , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Wcnss\Image_2       , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Wcnss\Image_2       , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Wcnss\Image_3       , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Wcnss\Image_3       , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Wcnss\Image_4       , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Wcnss\Image_4       , Crc                    , 0x00000000,

; Rpm

HKR, Parameters\Swevt\Rpm\Image_1         , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Rpm\Image_1         , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Rpm\Image_2         , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Rpm\Image_2         , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Rpm\Image_3         , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Rpm\Image_3         , Crc                    , 0x00000000,

HKR, Parameters\Swevt\Rpm\Image_4         , Bitmask                , 0x00000001, 0
HKR, Parameters\Swevt\Rpm\Image_4         , Crc                    , 0x00000000,
; Qdss pwrdb clock rundown at trace begin
HKR, Parameters\Dump\PwrDB\ClockRunDown   , TraceBegin             , 0x00010001, 0
; Qdss pwrdb clock rundown  at trace finish
HKR, Parameters\Dump\PwrDB\ClockRunDown   , TraceFinsh             , 0x00010001, 0
;Qdss pwrdb clock rundown  When ETR Interrupt happens
HKR, Parameters\Dump\PwrDB\ClockRunDown   , Interrupt              , 0x00010001, 0
;Qdss pwrdb clock rundown  Interval
HKR, Parameters\Dump\PwrDB\ClockRunDown   , dumpInterval           , 0x00010001, 0
;Qdss SystemDB clock rundown at trace begin
HKR, Parameters\Dump\SystemDB\ClockRunDown, TraceBegin             , 0x00010001, 0
;Qdss SystemDB clock rundown at trace finish
HKR, Parameters\Dump\SystemDB\ClockRunDown, TraceFinsh             , 0x00010001, 0
;Qdss SystemDB clock rundown When ETR Interrupt happens
HKR, Parameters\Dump\SystemDB\ClockRunDown, Interrupt              , 0x00010001, 0
;Qdss SystemDB clock rundown dumpInterval
HKR, Parameters\Dump\SystemDB\ClockRunDown, dumpInterval           , 0x00010001, 0
;Qdss TimeStamp at trace begin
HKR, Parameters\Dump\QDSS\TimeStamp       , TraceBegin             , 0x00010001, 0
;Qdss TimeStamp at trace finish
HKR, Parameters\Dump\QDSS\TimeStamp       , TraceFinsh             , 0x00010001, 0
;Qdss TimeStamp When ETR Interrupt happens
HKR, Parameters\Dump\QDSS\TimeStamp       , Interrupt              , 0x00010001, 0
;Qdss TimeStamp  dumpInterval
HKR, Parameters\Dump\QDSS\TimeStamp       , dumpInterval           , 0x00010001, 0

; Checks for compatibility with KMDF version
[QDSS_Device.NT.Wdf]
KmdfService = qcQDSS, QDSS_wdfsect
[QDSS_wdfsect]
KmdfLibraryVersion = 1.15

[Strings]
SPSVCINST_ASSOCSERVICE = 0x00000002
QUALCOMM               = "Qualcomm Inc."
DiskId1                = "QDSS Installation Disk"
QDSS.DeviceDesc        = "Qualcomm QDSS Device"
QDSS.SVCDESC           = "Qualcomm QDSS Driver"
SERVICE_KERNEL_DRIVER  = 1
SERVICE_BOOT_START     = 0
SERVICE_DEMAND_START   = 3
SERVICE_ERROR_NORMAL   = 1

